{"cells":[{"cell_type":"markdown","metadata":{"id":"we02pyM00gge"},"source":["# zero dimensional array"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"3xYtLNIi0ZRp","executionInfo":{"status":"ok","timestamp":1700114234389,"user_tz":-330,"elapsed":1023,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["import numpy as np"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"abmjwpv22o7L","executionInfo":{"status":"ok","timestamp":1700114234907,"user_tz":-330,"elapsed":11,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["a = np.arange(2,20,2)"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1700114234907,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"EUdrWC1m2tYx","outputId":"1e4c5879-5d59-4f59-936d-a3caeb2cb7e9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 2,  4,  6,  8, 10, 12, 14, 16, 18])"]},"metadata":{},"execution_count":4}],"source":["a"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1700114234907,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"xd1vcR0O2tys","outputId":"9bd9113f-0d56-4a0a-fe7f-33b792606258"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([12, 14, 16, 18])"]},"metadata":{},"execution_count":5}],"source":["a[5:]"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"8ZA7d73D2v9h","executionInfo":{"status":"ok","timestamp":1700114235427,"user_tz":-330,"elapsed":57,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["x = np.array([[2,4,6,8,10],[1,3,5,7,9]])"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":57,"status":"ok","timestamp":1700114235428,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"1SiDpRd64bVe","outputId":"86eaa25b-10a4-4624-aafb-0678134b87bf"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 2,  4,  6,  8, 10],\n","       [ 1,  3,  5,  7,  9]])"]},"metadata":{},"execution_count":7}],"source":["x"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":52,"status":"ok","timestamp":1700114235428,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"bWUr15NI7DzL","outputId":"833f83cc-ee91-4251-91f0-325a3889badb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["10"]},"metadata":{},"execution_count":8}],"source":["x[0,4]"]},{"cell_type":"code","execution_count":9,"metadata":{"id":"ne1DsJPG68fl","executionInfo":{"status":"ok","timestamp":1700114235429,"user_tz":-330,"elapsed":50,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["b = np. array ([[101,202,303],[102,303,204]])"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":49,"status":"ok","timestamp":1700114235429,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"-sYNyR9i8BpF","outputId":"c4ce73bd-763a-4b4a-fe3d-237089695620"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[101, 202, 303],\n","       [102, 303, 204]])"]},"metadata":{},"execution_count":10}],"source":["b"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":47,"status":"ok","timestamp":1700114235430,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"bg7gh1OP8GcP","outputId":"9d85654b-014e-48ee-cf0a-25be343c9d92"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["303"]},"metadata":{},"execution_count":11}],"source":["b[0,2]"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"QNyxJUe88L8U","executionInfo":{"status":"ok","timestamp":1700114235430,"user_tz":-330,"elapsed":44,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["b[0,2] = 10"]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":45,"status":"ok","timestamp":1700114235431,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"uXBNwjcK8bSD","outputId":"2a6e4621-1de7-42e0-ecb3-06eb4830301d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[101, 202,  10],\n","       [102, 303, 204]])"]},"metadata":{},"execution_count":13}],"source":["b"]},{"cell_type":"code","execution_count":14,"metadata":{"id":"YRiTEmy1-PP8","executionInfo":{"status":"ok","timestamp":1700114235432,"user_tz":-330,"elapsed":43,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["a = np. array([[1,2,3,4,5],[2,4,6,8,10],[1,3,5,7,9]])"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":42,"status":"ok","timestamp":1700114235432,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"h0hVHKZOBMOL","outputId":"407a3bdf-68e3-4e8c-b26c-b2952352ab07"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1,  2,  3,  4,  5],\n","       [ 2,  4,  6,  8, 10],\n","       [ 1,  3,  5,  7,  9]])"]},"metadata":{},"execution_count":15}],"source":["a"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":39,"status":"ok","timestamp":1700114235432,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"Pp8l6ZMqBtdt","outputId":"eadc0329-2f54-439e-89fe-97833f86e5ae"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3, 5)"]},"metadata":{},"execution_count":16}],"source":["a.shape"]},{"cell_type":"code","execution_count":17,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":37,"status":"ok","timestamp":1700114235433,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"H2L9wZlmBwET","outputId":"b68bdc8b-7034-4e89-d2eb-84e947878ffd"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":17}],"source":["a.ndim"]},{"cell_type":"code","execution_count":18,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":34,"status":"ok","timestamp":1700114235433,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"23mVNEx2BysP","outputId":"af83a37b-5113-4dc8-ba5e-586917a1f5db"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["10"]},"metadata":{},"execution_count":18}],"source":["a[1,4]"]},{"cell_type":"code","execution_count":19,"metadata":{"id":"2fgOdIiIB6Sr","colab":{"base_uri":"https://localhost:8080/","height":140},"executionInfo":{"status":"error","timestamp":1700114235433,"user_tz":-330,"elapsed":31,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"3406465d-a96a-45dd-f9c0-e3be778907f4"},"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-19-d4f382f87b49>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    1.create a numpy array 5,7 you have find out\u001b[0m\n\u001b[0m     ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid decimal literal\n"]}],"source":["1.create a numpy array 5,7 you have find out\n","you have a create a vector for values 0 to 100 you have to slice is\n","3.create to list 1.values ranges 0 t"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"Ba8bXthapHaK","executionInfo":{"status":"ok","timestamp":1700114249903,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["import numpy as np"]},{"cell_type":"code","execution_count":22,"metadata":{"id":"DtWWhEsRDSHI","executionInfo":{"status":"ok","timestamp":1700114251666,"user_tz":-330,"elapsed":3,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["a = np.array([[2,3,4,5],[5,6,7,8],[8,9,10,11]])"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1700114252117,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"VlpyHHBbo_gO","outputId":"92991f4c-513a-4960-be55-d5cbb9272e01"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3, 4)"]},"metadata":{},"execution_count":23}],"source":["a.shape"]},{"cell_type":"code","execution_count":24,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1700114252608,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"lXkMU8L-pPWq","outputId":"19155d79-2363-4b68-aba6-3f116e1b2469"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 2,  3,  4,  5],\n","       [ 5,  6,  7,  8],\n","       [ 8,  9, 10, 11]])"]},"metadata":{},"execution_count":24}],"source":["a"]},{"cell_type":"code","execution_count":25,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1700114253381,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"qe8iDLi2pSzm","outputId":"71baddbf-ffcf-43f5-deab-28029216138f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])"]},"metadata":{},"execution_count":25}],"source":["np.zeros(10)"]},{"cell_type":"code","execution_count":26,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1700114253381,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"ezw0BAr4pTiw","outputId":"2cc99807-12d4-4028-9929-004f5a9afe94"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 1., 1., 1., 1.],\n","       [1., 1., 1., 1., 1.],\n","       [1., 1., 1., 1., 1.]])"]},"metadata":{},"execution_count":26}],"source":["np.ones((3,5),dtype=float)"]},{"cell_type":"code","source":["#if you want to create random intergers\n","np.random.randint(0,10(3,3))  # start value, end value , shape ,#exception"],"metadata":{"id":"XOBsG-HRv54z","colab":{"base_uri":"https://localhost:8080/","height":262},"executionInfo":{"status":"error","timestamp":1700114302742,"user_tz":-330,"elapsed":9,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"116a5317-fe8a-4033-aae9-d6d7e6ddf09e"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stderr","text":["<>:2: SyntaxWarning: 'int' object is not callable; perhaps you missed a comma?\n","<>:2: SyntaxWarning: 'int' object is not callable; perhaps you missed a comma?\n","<ipython-input-34-5485fdde8a5b>:2: SyntaxWarning: 'int' object is not callable; perhaps you missed a comma?\n","  np.random.randint(0,10(3,3))  # start value, end value , shape ,#exception\n"]},{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-34-5485fdde8a5b>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#if you want to create random intergers\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrandom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrandint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# start value, end value , shape ,#exception\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: 'int' object is not callable"]}]},{"cell_type":"code","execution_count":36,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FYeGv3hupZhm","executionInfo":{"status":"ok","timestamp":1700114308331,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"45be5093-5def-4688-90ed-3ed39b359aab"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 0., 0.],\n","       [0., 1., 0.],\n","       [0., 0., 1.]])"]},"metadata":{},"execution_count":36}],"source":["import numpy as np\n","np.eye(3,3)"]},{"cell_type":"code","execution_count":37,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1700114310119,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"On3H3h94pzeH","outputId":"07608e19-2b48-4910-eb76-e5505fad8de0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 0, 0],\n","       [0, 1, 0],\n","       [0, 0, 1]], dtype=int8)"]},"metadata":{},"execution_count":37}],"source":["\n","np.identity(3,dtype=np.int8)"]},{"cell_type":"code","execution_count":38,"metadata":{"id":"jdCZjzFFp7ik","executionInfo":{"status":"ok","timestamp":1700114310678,"user_tz":-330,"elapsed":3,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["x1 = np.random.randint(0,10,size=6)"]},{"cell_type":"code","execution_count":39,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1700114312013,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"tnOBO1FQqGCL","outputId":"9b747791-b78c-4da1-fed4-8fa4501c5101"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([7, 4, 7, 4, 0, 3])"]},"metadata":{},"execution_count":39}],"source":["x1"]},{"cell_type":"code","execution_count":40,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1700114312624,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"nymFTsXxqHHm","outputId":"4a1c5857-d14a-44e9-b8e3-d48511788644"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[9, 8, 9, 6],\n","       [0, 2, 1, 5],\n","       [2, 5, 3, 6]])"]},"metadata":{},"execution_count":40}],"source":["x2 = np.random.randint(0,10,size=(3,4))\n","x2"]},{"cell_type":"code","execution_count":41,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1700114313655,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"zGG-qQ2NqQti","outputId":"ea99f7c8-f703-451f-a536-013e6d6c1a61"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[5, 2, 4, 0, 3],\n","        [6, 3, 8, 9, 2],\n","        [3, 2, 9, 9, 2],\n","        [4, 9, 7, 0, 5]],\n","\n","       [[3, 6, 7, 0, 1],\n","        [6, 8, 4, 6, 8],\n","        [1, 9, 1, 7, 7],\n","        [2, 7, 2, 9, 7]],\n","\n","       [[4, 0, 7, 1, 9],\n","        [1, 3, 3, 2, 2],\n","        [0, 4, 7, 5, 6],\n","        [1, 2, 5, 2, 5]]])"]},"metadata":{},"execution_count":41}],"source":["x2 = np.random.randint(0,10,size=(3,4,5))\n","x2"]},{"cell_type":"code","execution_count":42,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1700114314449,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"a3ABjxmDqres","outputId":"abf5b9f3-1ec6-45d4-caf6-e8ba09c5e3ef"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":42}],"source":["x2.ndim"]},{"cell_type":"code","execution_count":43,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1700114314933,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"jDJzfolOr3Km","outputId":"2c255096-5742-464c-f52f-3d1f4d49b009"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3, 4, 5)"]},"metadata":{},"execution_count":43}],"source":["x2.shape"]},{"cell_type":"code","execution_count":44,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1700114315513,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"mY1h7TJLr5Tv","outputId":"d47eafdf-d31e-4fcb-c55a-89c8ba10dd42"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["60"]},"metadata":{},"execution_count":44}],"source":["x2.size"]},{"cell_type":"code","execution_count":45,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1700114316200,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"KJ_9Q9qer8qt","outputId":"d4620394-1d91-4a4e-aa12-eca8d40e7606"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([7, 4, 7, 4, 0, 3])"]},"metadata":{},"execution_count":45}],"source":["x1"]},{"cell_type":"code","execution_count":46,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1700114317034,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"bZVoI_Aor_K_","outputId":"cf8df3fd-c7d1-4022-aad0-9961d65217cb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["7"]},"metadata":{},"execution_count":46}],"source":["x1[0]"]},{"cell_type":"code","execution_count":47,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1700114317543,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"uIxOH7pysJ8p","outputId":"035b484a-8b90-4689-9da6-931237d7671b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["7"]},"metadata":{},"execution_count":47}],"source":["x1[2]"]},{"cell_type":"code","execution_count":48,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1700114317543,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"LB5xfbVCsL_7","outputId":"3a52958f-91b9-46aa-e9d5-f58a3bc2648d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":48}],"source":["x1[-1]"]},{"cell_type":"code","execution_count":49,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1700114317979,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"abLyRIlHsSJb","outputId":"07a6ff07-c82b-4418-ea4d-ed6e5461264b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[9, 1, 1, 5],\n","       [2, 1, 5, 7],\n","       [8, 5, 4, 2]])"]},"metadata":{},"execution_count":49}],"source":["x2 = np.random.randint(0,10,size=(3,4))\n","x2"]},{"cell_type":"code","execution_count":50,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1700114318672,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"hs4jpEj8shC4","outputId":"ae4b00f5-35f0-4b4e-deb4-08095e89679b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["9"]},"metadata":{},"execution_count":50}],"source":["x2[0,0]"]},{"cell_type":"code","execution_count":51,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1700114318673,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"oV8FoEWuslOY","outputId":"bad4c6f4-2aa6-430c-a495-5d81bdf8de0b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":51}],"source":["x2[0,1]"]},{"cell_type":"code","execution_count":52,"metadata":{"id":"4L4IOPxasrJl","executionInfo":{"status":"ok","timestamp":1700114319404,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["x2[0,0]=12"]},{"cell_type":"code","execution_count":53,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1700114319873,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"u4Tx0mj5svdP","outputId":"8f26c3bd-5a96-4710-bb5e-6cb67baa1be1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[12,  1,  1,  5],\n","       [ 2,  1,  5,  7],\n","       [ 8,  5,  4,  2]])"]},"metadata":{},"execution_count":53}],"source":["x2"]},{"cell_type":"code","execution_count":54,"metadata":{"id":"-Xz-xrs9swng","executionInfo":{"status":"ok","timestamp":1700114319873,"user_tz":-330,"elapsed":5,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["x = np.arange(10)"]},{"cell_type":"code","execution_count":55,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1700114320583,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"3UPPuYPSs5yU","outputId":"5458e30c-fffb-4f86-f85c-31a1a6e512ce"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"]},"metadata":{},"execution_count":55}],"source":["x"]},{"cell_type":"code","execution_count":56,"metadata":{"id":"rH5swxbSs7UI","executionInfo":{"status":"ok","timestamp":1700114321028,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["x = np.random.randint(10,size=10)"]},{"cell_type":"code","execution_count":57,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1700114321468,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"pHArHE9Rt0HS","outputId":"4ed9e6b4-ccea-433b-c1f6-2c5c8cdbf82b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([4, 3, 7, 3, 8, 7, 4, 2, 0, 0])"]},"metadata":{},"execution_count":57}],"source":["x"]},{"cell_type":"code","execution_count":58,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1700114322203,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"qO6UkZBTt3fb","outputId":"64d128ef-2f5d-4694-f667-149ad5a976fb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([8, 7, 4, 2, 0, 0])"]},"metadata":{},"execution_count":58}],"source":["x[4:]"]},{"cell_type":"code","execution_count":59,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1700114322204,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"TJDN4ecuuHBe","outputId":"c334b01d-78c0-421b-8028-63f1d0da6f41"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([7, 3, 8, 7])"]},"metadata":{},"execution_count":59}],"source":["x[2:6]"]},{"cell_type":"code","execution_count":60,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1700114323043,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"afMofZ4Dui4h","outputId":"09bbe489-f397-479c-b308-e9a2da795305"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[12,  1,  1,  5],\n","       [ 2,  1,  5,  7],\n","       [ 8,  5,  4,  2]])"]},"metadata":{},"execution_count":60}],"source":["x2"]},{"cell_type":"code","execution_count":61,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1700114323859,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"tL8kTNAxuj9A","outputId":"3cc7f6dd-aecb-4a84-efbc-cbdb7cdd03b1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[12,  1],\n","       [ 2,  1]])"]},"metadata":{},"execution_count":61}],"source":["x2[:2,:2] #row position,column position"]},{"cell_type":"code","execution_count":62,"metadata":{"id":"SVFmG-NSuuHI","executionInfo":{"status":"ok","timestamp":1700114323859,"user_tz":-330,"elapsed":8,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["a = np.arange(9)"]},{"cell_type":"code","execution_count":63,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1700114323860,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"FrlQJdCpvX6e","outputId":"195fac71-e8cc-4da6-c1dc-8fe3da537991"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 2, 3, 4, 5, 6, 7, 8])"]},"metadata":{},"execution_count":63}],"source":["a"]},{"cell_type":"code","execution_count":64,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1700114324589,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"Fgm0ykeBvYzq","outputId":"4c36a06b-173b-40b7-b8b9-d704d54b6a99"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["9"]},"metadata":{},"execution_count":64}],"source":["len(a)"]},{"cell_type":"code","execution_count":65,"metadata":{"id":"1vHGyaqBvaPf","executionInfo":{"status":"ok","timestamp":1700114324590,"user_tz":-330,"elapsed":6,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["a = a.reshape((3,3))"]},{"cell_type":"code","execution_count":66,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1700114325015,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"Y7r-a3Uwvd8W","outputId":"47df417a-99c4-4254-93a1-799400b228b3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0, 1, 2],\n","       [3, 4, 5],\n","       [6, 7, 8]])"]},"metadata":{},"execution_count":66}],"source":["a"]},{"cell_type":"code","execution_count":67,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1700114325681,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"8C91MB0twgZJ","outputId":"bc4af72b-c6c9-4053-f409-c97fd053773e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3, 3)"]},"metadata":{},"execution_count":67}],"source":["a.shape"]},{"cell_type":"code","execution_count":68,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1700114325682,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"u55iOOpovq1R","outputId":"8b101798-c63f-4d55-f42d-184d8914656b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1, 3, 3)"]},"metadata":{},"execution_count":68}],"source":["y = a[np.newaxis,:,:]\n","y.shape"]},{"cell_type":"code","execution_count":69,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1700114326090,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"p2fGKf6sv-m9","outputId":"ee26ca02-8fd5-4b56-fdcf-dd279da868ed"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3, 1, 3)"]},"metadata":{},"execution_count":69}],"source":["y = a[:,np.newaxis]\n","y.shape"]},{"cell_type":"code","execution_count":70,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1700114326808,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"GROLOnW3wcE2","outputId":"e5649254-db63-4344-e220-12e9758a33f9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3, 3, 1)"]},"metadata":{},"execution_count":70}],"source":["y = a[:,:,np.newaxis]\n","y.shape"]},{"cell_type":"code","execution_count":71,"metadata":{"id":"kDui-IJwwov0","executionInfo":{"status":"ok","timestamp":1700114326808,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["x = np.array([1,2,3])\n","y = np.array([3,2,1])"]},{"cell_type":"code","execution_count":72,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1700114327259,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"Xvm2_nkMx9Em","outputId":"c227e57d-133b-435d-a3ef-c72567a5fd96"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3,)"]},"metadata":{},"execution_count":72}],"source":["x.shape"]},{"cell_type":"code","execution_count":73,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1700114327962,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"4GwYqJSpx-Z_","outputId":"c1a0b05f-ff77-4419-f34b-5fabfcdb4e61"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3,)"]},"metadata":{},"execution_count":73}],"source":["y.shape"]},{"cell_type":"code","execution_count":74,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1700114327963,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"bs2HGrhvyAMz","outputId":"0c95722c-6acb-4e9d-a8cb-124f812ac5a6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 3, 3, 2, 1])"]},"metadata":{},"execution_count":74}],"source":["np.concatenate((x,y))"]},{"cell_type":"code","execution_count":75,"metadata":{"id":"JguqsPmaycJu","executionInfo":{"status":"ok","timestamp":1700114328429,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["grid = np.array([[1,2,3],\n","                 [4,5,6]])\n"]},{"cell_type":"code","execution_count":76,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1700114328885,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"YUxKw-wlywJ3","outputId":"89b00aa4-fd8a-4e43-a93b-5fde87f3647f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2, 3)"]},"metadata":{},"execution_count":76}],"source":["grid.shape"]},{"cell_type":"code","execution_count":77,"metadata":{"id":"FQT7qO_PyzeC","executionInfo":{"status":"ok","timestamp":1700114329589,"user_tz":-330,"elapsed":3,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["grid = grid[np.newaxis,:,:]"]},{"cell_type":"code","execution_count":78,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1700114330839,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"kN7d_0-By8kb","outputId":"04db8b51-1660-482d-cd9b-e9a49bfd2642"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1, 2, 3)"]},"metadata":{},"execution_count":78}],"source":["grid.shape"]},{"cell_type":"code","execution_count":79,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1700114330839,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"sPk7shKyy_yM","outputId":"76c161ae-269f-40cb-da88-813be9e2ead9"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[1, 2, 3],\n","        [4, 5, 6]],\n","\n","       [[1, 2, 3],\n","        [4, 5, 6]]])"]},"metadata":{},"execution_count":79}],"source":["np.concatenate((grid,grid),axis = 0)"]},{"cell_type":"code","execution_count":80,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1700114331612,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"FbKGxIZEzRVO","outputId":"8f7c040a-37f3-4686-8a1d-bade8331bc3f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2, 2, 3)"]},"metadata":{},"execution_count":80}],"source":["np.concatenate((grid,grid),axis = 0).shape"]},{"cell_type":"code","execution_count":81,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1700114332079,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"yVe_iUL5zXrb","outputId":"036a17ae-e195-45ba-b583-21bc611d8f28"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[1, 2, 3],\n","        [4, 5, 6],\n","        [1, 2, 3],\n","        [4, 5, 6]]])"]},"metadata":{},"execution_count":81}],"source":["np.concatenate((grid,grid),axis = 1)"]},{"cell_type":"code","execution_count":82,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1700114332703,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"KI31ySzD0GGi","outputId":"22708752-0f76-42ea-ee7a-ece68508166f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1, 4, 3)"]},"metadata":{},"execution_count":82}],"source":["np.concatenate((grid,grid),axis = 1).shape"]},{"cell_type":"code","execution_count":83,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4,"status":"ok","timestamp":1700114333263,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"Y-WanQ620Jm1","outputId":"4dcd0ebd-e6ee-4f62-87fc-38262477bf4a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[1, 2, 3, 1, 2, 3],\n","        [4, 5, 6, 4, 5, 6]]])"]},"metadata":{},"execution_count":83}],"source":["np.concatenate((grid,grid),axis = 2)"]},{"cell_type":"code","execution_count":84,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10,"status":"ok","timestamp":1700114334587,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"},"user_tz":-330},"id":"XibaiQf-0Nfd","outputId":"95b48f53-dbbe-4069-f0a6-3a8979cf8005"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1, 2, 6)"]},"metadata":{},"execution_count":84}],"source":["np.concatenate((grid,grid),axis = 2).shape"]},{"cell_type":"code","execution_count":85,"metadata":{"id":"Lc1Jy0v1IECp","executionInfo":{"status":"ok","timestamp":1700114334587,"user_tz":-330,"elapsed":7,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"outputs":[],"source":["x = np.array([1,2,3])\n","grid = np.array([[9,8,7],\n","                 [6,5,4]])"]},{"cell_type":"code","source":["x.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sgB85puDxJ4m","executionInfo":{"status":"ok","timestamp":1700114335254,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"e8ffc3bc-69a7-4338-b3d5-f81db3dd6dfc"},"execution_count":86,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3,)"]},"metadata":{},"execution_count":86}]},{"cell_type":"code","source":["grid.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F-CINJs-xddd","executionInfo":{"status":"ok","timestamp":1700114335701,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"fe559907-7cc6-47dc-b6cf-d44eacd7c314"},"execution_count":87,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2, 3)"]},"metadata":{},"execution_count":87}]},{"cell_type":"code","source":["np.vstack([x,grid])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A1bCUsRHxfkv","executionInfo":{"status":"ok","timestamp":1700114339348,"user_tz":-330,"elapsed":5,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"12f4fa3a-b37f-4e10-d90a-85aed7ddc5ab"},"execution_count":88,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2, 3],\n","       [9, 8, 7],\n","       [6, 5, 4]])"]},"metadata":{},"execution_count":88}]},{"cell_type":"code","source":["x = np.array([[99],[99]])\n","x.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RcOh9hccxodj","executionInfo":{"status":"ok","timestamp":1700114341273,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"5b508535-5096-4fea-fec7-7b8bcba84511"},"execution_count":89,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2, 1)"]},"metadata":{},"execution_count":89}]},{"cell_type":"code","source":["np.hstack([x,grid])"],"metadata":{"id":"x2447F_AypE-","executionInfo":{"status":"aborted","timestamp":1700114235481,"user_tz":-330,"elapsed":2657,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x =np.array([[2,3,4],[5,6,7]])\n","y = np.array([1,2,3])\n","np.vstack([x,y])"],"metadata":{"id":"_6B5_LuLzCRE","executionInfo":{"status":"aborted","timestamp":1700114235481,"user_tz":-330,"elapsed":2653,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","#python code to create inverse of element in the numpy array\n","#np.array([3,4,5,6]):"],"metadata":{"id":"iIZPuAy00oqG","executionInfo":{"status":"aborted","timestamp":1700114235481,"user_tz":-330,"elapsed":2652,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def resiprocal(arr):\n","  ans = []\n","  for i in arr:\n","    ans.append(1/i)\n","    return np.array(ans)\n","\n","\n","resiprocal(np.array([3,4,5,6]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dSLniUat1FUe","executionInfo":{"status":"ok","timestamp":1700116805990,"user_tz":-330,"elapsed":644,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"619e768b-a464-4179-bcfe-4373418252cb"},"execution_count":91,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.33333333])"]},"metadata":{},"execution_count":91}]},{"cell_type":"code","source":["x = np.arange(4)\n","x + 5"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7EL_0i483CAA","executionInfo":{"status":"ok","timestamp":1700116806588,"user_tz":-330,"elapsed":3,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"9f8fb36e-b9dc-47f3-e57c-f656bc655c61"},"execution_count":92,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([5, 6, 7, 8])"]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":[],"metadata":{"id":"QfF6-LDB3eGs","executionInfo":{"status":"ok","timestamp":1700116807905,"user_tz":-330,"elapsed":3,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":92,"outputs":[]},{"cell_type":"code","source":["np.add(x,5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AysWNECP3ed0","executionInfo":{"status":"ok","timestamp":1700116809145,"user_tz":-330,"elapsed":5,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"a1c97cbe-29b8-402d-a079-d99b9d9b6bc3"},"execution_count":93,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([5, 6, 7, 8])"]},"metadata":{},"execution_count":93}]},{"cell_type":"code","source":["x = np.array([-2,-1,0,1,2])\n","np.abs(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rtmdGsQt3dzU","executionInfo":{"status":"ok","timestamp":1700116809704,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"04d56d78-e7fe-48b8-89b3-8c444a66792c"},"execution_count":94,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([2, 1, 0, 1, 2])"]},"metadata":{},"execution_count":94}]},{"cell_type":"code","source":["theta = np.linspace(0,np.pi,3)"],"metadata":{"id":"vp6FZLHF3yOx","executionInfo":{"status":"ok","timestamp":1700116810939,"user_tz":-330,"elapsed":3,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":95,"outputs":[]},{"cell_type":"code","source":["theta"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XMdvK9NT390r","executionInfo":{"status":"ok","timestamp":1700116812069,"user_tz":-330,"elapsed":570,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"abc8f5dc-c8c7-445a-98fc-be99cdb5d5de"},"execution_count":96,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.        , 1.57079633, 3.14159265])"]},"metadata":{},"execution_count":96}]},{"cell_type":"code","source":["np.sin(theta)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UN1FbzsU4AbU","executionInfo":{"status":"ok","timestamp":1700116812644,"user_tz":-330,"elapsed":6,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"871f868b-5008-48e0-e808-9f131e51bf4b"},"execution_count":97,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.0000000e+00, 1.0000000e+00, 1.2246468e-16])"]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["np.cos(theta)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2U-japNC4FKZ","executionInfo":{"status":"ok","timestamp":1700116813289,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"a7e4ed67-47ac-4016-ec5b-d8df45fa566b"},"execution_count":98,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 1.000000e+00,  6.123234e-17, -1.000000e+00])"]},"metadata":{},"execution_count":98}]},{"cell_type":"code","source":["np.tan(theta)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-BzimFfH4Kqy","executionInfo":{"status":"ok","timestamp":1700116814933,"user_tz":-330,"elapsed":9,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"4477b96e-d2d0-4259-827d-2955723e5ebe"},"execution_count":99,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0.00000000e+00,  1.63312394e+16, -1.22464680e-16])"]},"metadata":{},"execution_count":99}]},{"cell_type":"code","source":["x = np.array([1,2,3])"],"metadata":{"id":"7ASpiGZO3PzH","executionInfo":{"status":"ok","timestamp":1700116814934,"user_tz":-330,"elapsed":8,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":100,"outputs":[]},{"cell_type":"code","source":["np.exp(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"My8a9D2X4cbh","executionInfo":{"status":"ok","timestamp":1700116814934,"user_tz":-330,"elapsed":7,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"4c32f1da-8c0a-4eff-dbca-ea1d12bffe01"},"execution_count":101,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 2.71828183,  7.3890561 , 20.08553692])"]},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["x = np.random.random(100)"],"metadata":{"id":"ld3eT0iO4fFl","executionInfo":{"status":"ok","timestamp":1700116815607,"user_tz":-330,"elapsed":3,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":102,"outputs":[]},{"cell_type":"code","source":["np.min(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kjORrb5n5Cwz","executionInfo":{"status":"ok","timestamp":1700116816266,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"e2ec62fb-fe28-4579-821b-dbd7842dd489"},"execution_count":103,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.007103303242318448"]},"metadata":{},"execution_count":103}]},{"cell_type":"code","source":["np.max(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_XKwk7SU5rUh","executionInfo":{"status":"ok","timestamp":1700116817069,"user_tz":-330,"elapsed":16,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"5fd53d68-0511-44b8-f2b7-57b61a4c0117"},"execution_count":104,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9915196882135571"]},"metadata":{},"execution_count":104}]},{"cell_type":"code","source":["from google.colab import files\n","uploaded = files.upload()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":73},"id":"g5RrXqT55XdP","executionInfo":{"status":"ok","timestamp":1700116841463,"user_tz":-330,"elapsed":24407,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"5385f604-0477-4565-e913-16415006e4ea"},"execution_count":105,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-fb6d9ec5-d545-435b-a57d-4d2ec36bb06d\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-fb6d9ec5-d545-435b-a57d-4d2ec36bb06d\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving president_heights.csv to president_heights.csv\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","df = pd.read_csv('president_heights.csv')"],"metadata":{"id":"2Le9qD2K5j1U","executionInfo":{"status":"ok","timestamp":1700116842114,"user_tz":-330,"elapsed":658,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":106,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"C43KxQgu6Pf9","executionInfo":{"status":"ok","timestamp":1700116842114,"user_tz":-330,"elapsed":28,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"f75ae4f6-8a73-492c-a019-b2351b6cc4b3"},"execution_count":107,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   order               name  height(cm)\n","0      1  George Washington         189\n","1      2         John Adams         170\n","2      3   Thomas Jefferson         189\n","3      4      James Madison         163\n","4      5       James Monroe         183"],"text/html":["\n","  <div id=\"df-ef5e366b-0732-4922-af74-a70fcf4b4e8c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order</th>\n","      <th>name</th>\n","      <th>height(cm)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>George Washington</td>\n","      <td>189</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>John Adams</td>\n","      <td>170</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Thomas Jefferson</td>\n","      <td>189</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>James Madison</td>\n","      <td>163</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>James Monroe</td>\n","      <td>183</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef5e366b-0732-4922-af74-a70fcf4b4e8c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ef5e366b-0732-4922-af74-a70fcf4b4e8c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ef5e366b-0732-4922-af74-a70fcf4b4e8c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-88339bdd-eff2-484b-861d-8b6c7275252c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-88339bdd-eff2-484b-861d-8b6c7275252c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-88339bdd-eff2-484b-861d-8b6c7275252c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":107}]},{"cell_type":"code","source":["height = df['height(cm)'].values"],"metadata":{"id":"tlBoqaZM6k0l","executionInfo":{"status":"ok","timestamp":1700116849074,"user_tz":-330,"elapsed":641,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":114,"outputs":[]},{"cell_type":"code","source":["height"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VzzfE7cq647y","executionInfo":{"status":"ok","timestamp":1700116851047,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"bca47388-277f-41f6-f8c1-ace8c52a7941"},"execution_count":115,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([189, 170, 189, 163, 183, 171, 185, 168, 173, 183, 173, 173, 175,\n","       178, 183, 193, 178, 173, 174, 183, 183, 168, 170, 178, 182, 180,\n","       183, 178, 182, 188, 175, 179, 183, 193, 182, 183, 177, 185, 188,\n","       188, 182, 185, 191, 182])"]},"metadata":{},"execution_count":115}]},{"cell_type":"code","source":["np.max(height)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BKCB7Jfw67lv","executionInfo":{"status":"ok","timestamp":1700116851628,"user_tz":-330,"elapsed":3,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"a261fbd2-a131-4ebc-ce3d-60be9dc77f34"},"execution_count":116,"outputs":[{"output_type":"execute_result","data":{"text/plain":["193"]},"metadata":{},"execution_count":116}]},{"cell_type":"code","source":["np.mean(height)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tAaSL5Pn7QvI","executionInfo":{"status":"ok","timestamp":1700116852727,"user_tz":-330,"elapsed":11,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"075e0896-fd9b-4851-cdab-6625c9cfc1ba"},"execution_count":117,"outputs":[{"output_type":"execute_result","data":{"text/plain":["180.04545454545453"]},"metadata":{},"execution_count":117}]},{"cell_type":"code","source":["np.average(height)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5PlKlSAY7YWz","executionInfo":{"status":"ok","timestamp":1700116852727,"user_tz":-330,"elapsed":6,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"6c47427f-cddd-4c2b-fd95-95cbf9574bd1"},"execution_count":118,"outputs":[{"output_type":"execute_result","data":{"text/plain":["180.04545454545453"]},"metadata":{},"execution_count":118}]},{"cell_type":"code","source":["np.std(height) #sta"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w5wXI7Wp7eQp","executionInfo":{"status":"ok","timestamp":1700116853497,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"438bac7a-612b-4f4c-f4b7-772a4205579a"},"execution_count":119,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6.983599441335736"]},"metadata":{},"execution_count":119}]},{"cell_type":"code","source":["np.median(height)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t0YePWLW7pxs","executionInfo":{"status":"ok","timestamp":1700116854164,"user_tz":-330,"elapsed":6,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"02be3c73-4004-4573-be4d-9a591a323ed4"},"execution_count":120,"outputs":[{"output_type":"execute_result","data":{"text/plain":["182.0"]},"metadata":{},"execution_count":120}]},{"cell_type":"code","source":["np.percentile(height,25)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YItnyATp72C1","executionInfo":{"status":"ok","timestamp":1700116854877,"user_tz":-330,"elapsed":10,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"060ed7b9-a932-4d0f-8bdf-7052fe42d62c"},"execution_count":121,"outputs":[{"output_type":"execute_result","data":{"text/plain":["174.75"]},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["np.percentile(height,75)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_oFqzzgs8tjf","executionInfo":{"status":"ok","timestamp":1700116854877,"user_tz":-330,"elapsed":6,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"c0cf95ba-9f04-4dac-85af-e851224936dd"},"execution_count":122,"outputs":[{"output_type":"execute_result","data":{"text/plain":["183.5"]},"metadata":{},"execution_count":122}]},{"cell_type":"code","source":["np.percentile(height,50)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ODNvgitl80ZQ","executionInfo":{"status":"ok","timestamp":1700116855484,"user_tz":-330,"elapsed":12,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"1d417634-eb22-4f76-bc6a-3cb02e4e1d8a"},"execution_count":123,"outputs":[{"output_type":"execute_result","data":{"text/plain":["182.0"]},"metadata":{},"execution_count":123}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","plt.hist(height)\n","plt.title('histogram of heights')\n","plt.xlabel('height')\n","plt.ylabel('count')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"4aEC4PVa857O","executionInfo":{"status":"ok","timestamp":1700116855484,"user_tz":-330,"elapsed":10,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"7f364591-50bb-4ab7-af8e-3d6e69b2c2f1"},"execution_count":124,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'count')"]},"metadata":{},"execution_count":124},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","plt.hist(height,bins=50)\n","plt.title('histogram of heights')\n","plt.xlabel('height')\n","plt.ylabel('count')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"m1uG_Ho7-TxC","executionInfo":{"status":"ok","timestamp":1700116856350,"user_tz":-330,"elapsed":9,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"2fc25566-f4d4-488a-8ec5-f0704e945f9f"},"execution_count":125,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'count')"]},"metadata":{},"execution_count":125},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import numpy as np"],"metadata":{"id":"Z-_BNOq136pv","executionInfo":{"status":"ok","timestamp":1700116857160,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":126,"outputs":[]},{"cell_type":"code","source":["#broadcasting\n","\n","a = np.array([0,1,2])\n","b = np.array([5,5,5])\n","\n","a+b"],"metadata":{"id":"_EiQS89c-Wls","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1700116857763,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"463b8f01-08a8-4df9-baef-7f8a9d3e6eca"},"execution_count":127,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([5, 6, 7])"]},"metadata":{},"execution_count":127}]},{"cell_type":"code","source":["M = np.ones((3,3))"],"metadata":{"id":"jdhy2N363uMS","executionInfo":{"status":"ok","timestamp":1700116858131,"user_tz":-330,"elapsed":3,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":128,"outputs":[]},{"cell_type":"code","source":["M"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I7PC7JsV4yBX","executionInfo":{"status":"ok","timestamp":1700116858790,"user_tz":-330,"elapsed":9,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"53b7050c-1928-471d-e841-ab61a926b235"},"execution_count":129,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 1., 1.],\n","       [1., 1., 1.],\n","       [1., 1., 1.]])"]},"metadata":{},"execution_count":129}]},{"cell_type":"code","source":["M+a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fn_mt6GX4ymr","executionInfo":{"status":"ok","timestamp":1700116858791,"user_tz":-330,"elapsed":7,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"55ca534e-dd41-4da5-8fe3-227548f3ead1"},"execution_count":130,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1., 2., 3.],\n","       [1., 2., 3.],\n","       [1., 2., 3.]])"]},"metadata":{},"execution_count":130}]},{"cell_type":"code","source":["X = np.random.random((10,3))"],"metadata":{"id":"z8k4HT5K44We","executionInfo":{"status":"ok","timestamp":1700116859489,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":131,"outputs":[]},{"cell_type":"code","source":["Xmean = np.mean(X)"],"metadata":{"id":"JTCYxUiH5QWx","executionInfo":{"status":"ok","timestamp":1700116860313,"user_tz":-330,"elapsed":7,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":132,"outputs":[]},{"cell_type":"code","source":["Xmean"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y2u3g-XY5Ymr","executionInfo":{"status":"ok","timestamp":1700116860313,"user_tz":-330,"elapsed":6,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"62aa4267-4111-47c4-8a2c-0293b54f9fa9"},"execution_count":133,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.4474218822000714"]},"metadata":{},"execution_count":133}]},{"cell_type":"code","source":["Xcentered = X - Xmean"],"metadata":{"id":"e3p3twjL5cvL","executionInfo":{"status":"ok","timestamp":1700116860959,"user_tz":-330,"elapsed":3,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":134,"outputs":[]},{"cell_type":"code","source":["Xcentered"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lE6ixO8S5peG","executionInfo":{"status":"ok","timestamp":1700116861741,"user_tz":-330,"elapsed":9,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"2e419da5-6c3f-4975-fa88-2ce4a911d74d"},"execution_count":135,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-0.2189666 , -0.15310914, -0.23364499],\n","       [ 0.35477265,  0.02458558,  0.11125385],\n","       [ 0.08011524, -0.4448088 ,  0.19134512],\n","       [-0.03217221, -0.22432648,  0.16971001],\n","       [ 0.21615787, -0.3094822 ,  0.45160101],\n","       [-0.3170279 , -0.02860803, -0.39207768],\n","       [ 0.00545339, -0.09486069, -0.09723631],\n","       [ 0.09837954, -0.17250649,  0.47149706],\n","       [-0.34769584,  0.43373455,  0.35604866],\n","       [ 0.39293449, -0.40463978,  0.11357409]])"]},"metadata":{},"execution_count":135}]},{"cell_type":"code","source":["Xcentered/np.std(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SQuOTfmN5sir","executionInfo":{"status":"ok","timestamp":1700116861741,"user_tz":-330,"elapsed":6,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"70a26b0d-c6e1-4b99-8ea8-b047ad904ea0"},"execution_count":136,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-0.8023366 , -0.56102195, -0.85612112],\n","       [ 1.29995663,  0.0900864 ,  0.40765595],\n","       [ 0.29355798, -1.62986678,  0.70112609],\n","       [-0.11788528, -0.82197627,  0.62185081],\n","       [ 0.79204489, -1.13400354,  1.65475476],\n","       [-1.16165245, -0.10482545, -1.4366496 ],\n","       [ 0.01998229, -0.34758817, -0.35629293],\n","       [ 0.36048195, -0.63209764,  1.72765781],\n","       [-1.27402583,  1.58928853,  1.30463218],\n","       [ 1.43978911, -1.48267958,  0.41615778]])"]},"metadata":{},"execution_count":136}]},{"cell_type":"code","source":["X_final=Xcentered/np.std(X)"],"metadata":{"id":"TJ9xIDAh6n3D","executionInfo":{"status":"ok","timestamp":1700116862753,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":137,"outputs":[]},{"cell_type":"code","source":["X_final.mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bzH_sMFs7WEZ","executionInfo":{"status":"ok","timestamp":1700116863708,"user_tz":-330,"elapsed":14,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"6f3e5eb7-b726-4d2a-e8d0-10f6a67fe957"},"execution_count":138,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4.9960036108132046e-17"]},"metadata":{},"execution_count":138}]},{"cell_type":"code","source":["from google.colab import files\n","uploaded = files.upload()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":73},"id":"ffLoVAbD7fnu","executionInfo":{"status":"ok","timestamp":1700116890072,"user_tz":-330,"elapsed":26371,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"5ec19b1c-8add-4958-a705-bd68059011fd"},"execution_count":139,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-19d1a79f-3a27-4e14-8651-b1ad24eedfae\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-19d1a79f-3a27-4e14-8651-b1ad24eedfae\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving president_heights.csv to president_heights (1).csv\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","df = pd.read_csv('president_heights.csv')"],"metadata":{"id":"N4BsG-1T8dpY","executionInfo":{"status":"ok","timestamp":1700116890073,"user_tz":-330,"elapsed":33,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":140,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"w5urbsfH8sca","executionInfo":{"status":"ok","timestamp":1700116890074,"user_tz":-330,"elapsed":33,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"90c53034-582b-4e94-b9f4-0fdef06bd142"},"execution_count":141,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   order               name  height(cm)\n","0      1  George Washington         189\n","1      2         John Adams         170\n","2      3   Thomas Jefferson         189\n","3      4      James Madison         163\n","4      5       James Monroe         183"],"text/html":["\n","  <div id=\"df-be6bfdf5-aede-41c1-a25c-3106910401f3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>order</th>\n","      <th>name</th>\n","      <th>height(cm)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>George Washington</td>\n","      <td>189</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>John Adams</td>\n","      <td>170</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Thomas Jefferson</td>\n","      <td>189</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>James Madison</td>\n","      <td>163</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>James Monroe</td>\n","      <td>183</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-be6bfdf5-aede-41c1-a25c-3106910401f3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-be6bfdf5-aede-41c1-a25c-3106910401f3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-be6bfdf5-aede-41c1-a25c-3106910401f3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f38e1640-7c40-43a8-b09b-f27858bad0d3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f38e1640-7c40-43a8-b09b-f27858bad0d3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f38e1640-7c40-43a8-b09b-f27858bad0d3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":141}]},{"cell_type":"code","source":["height = df['height(cm)'].values"],"metadata":{"id":"6InJqkcY85ND","executionInfo":{"status":"ok","timestamp":1700116890074,"user_tz":-330,"elapsed":30,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":142,"outputs":[]},{"cell_type":"code","source":["height"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0DFUg-1F86jC","executionInfo":{"status":"ok","timestamp":1700116890074,"user_tz":-330,"elapsed":30,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"dea11442-c061-4765-9fa0-3e4042c3b5e5"},"execution_count":143,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([189, 170, 189, 163, 183, 171, 185, 168, 173, 183, 173, 173, 175,\n","       178, 183, 193, 178, 173, 174, 183, 183, 168, 170, 178, 182, 180,\n","       183, 178, 182, 188, 175, 179, 183, 193, 182, 183, 177, 185, 188,\n","       188, 182, 185, 191, 182])"]},"metadata":{},"execution_count":143}]},{"cell_type":"code","source":["height > 180"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iOpk_cCb9JcP","executionInfo":{"status":"ok","timestamp":1700116900437,"user_tz":-330,"elapsed":8,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"02e01acc-1640-41a1-8ce2-0299d7ef8ef4"},"execution_count":145,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ True, False,  True, False,  True, False,  True, False, False,\n","        True, False, False, False, False,  True,  True, False, False,\n","       False,  True,  True, False, False, False,  True, False,  True,\n","       False,  True,  True, False, False,  True,  True,  True,  True,\n","       False,  True,  True,  True,  True,  True,  True,  True])"]},"metadata":{},"execution_count":145}]},{"cell_type":"code","source":["height[height >180].mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UCXImU8p9Qe1","executionInfo":{"status":"ok","timestamp":1700116900437,"user_tz":-330,"elapsed":6,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"dcbc041c-8e7c-400e-82cd-cda75600f1c1"},"execution_count":146,"outputs":[{"output_type":"execute_result","data":{"text/plain":["185.33333333333334"]},"metadata":{},"execution_count":146}]},{"cell_type":"code","source":[],"metadata":{"id":"uhZ5L-iy9bc3","executionInfo":{"status":"ok","timestamp":1700116901510,"user_tz":-330,"elapsed":3,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":146,"outputs":[]},{"cell_type":"code","source":["height[(height > 180) & (height < 185)].mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N7Kmd1Q09oAr","executionInfo":{"status":"ok","timestamp":1700116901953,"user_tz":-330,"elapsed":3,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"5f9c539f-7dde-48ae-ad6b-3466d7cd2b26"},"execution_count":147,"outputs":[{"output_type":"execute_result","data":{"text/plain":["182.6153846153846"]},"metadata":{},"execution_count":147}]},{"cell_type":"code","source":["height[~((height > 180) & (height < 185))].mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YYYpXXGA-Ehx","executionInfo":{"status":"ok","timestamp":1700116902433,"user_tz":-330,"elapsed":4,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}},"outputId":"d68cc458-d1f0-43f8-d4e5-76e0a0b93c96"},"execution_count":148,"outputs":[{"output_type":"execute_result","data":{"text/plain":["178.96774193548387"]},"metadata":{},"execution_count":148}]},{"cell_type":"code","source":[],"metadata":{"id":"akeB9zPR-ak8","executionInfo":{"status":"ok","timestamp":1700116902906,"user_tz":-330,"elapsed":2,"user":{"displayName":"Prasanna Naidu","userId":"06887470515755316133"}}},"execution_count":148,"outputs":[]}],"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN91yJj3WdeiDY31PDNwx67"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}